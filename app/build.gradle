plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.aula15"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // essa implemenação permite o uso do coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"


    //essa dependencia vai trazer um uma coroutine que acompanha o ciclo de vida da view model,
    // a view mode acompanha o ciclo de vida da acttivity, quando a activity inicia,
    // a view model inicia juinto, quando a activity termina, a view model termina junto, e
    // eu preciso que aquela atividade em segundo plano também termine junto com isso tudo.
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"



}